# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import Union
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .base import OneOfBaseModel
from .table_column_props import TableColumnProps


class RowsGuard(OneOfBaseModel):
    class_list = {"str": str, "dict": dict}


Rows = Union[str, dict]


@JsonMap({"id_": "id"})
class DatasetViewResponse(BaseModel):
    """DatasetViewResponse

    :param id_: id_
    :type id_: str
    :param created_at: created_at
    :type created_at: str
    :param name: name
    :type name: str
    :param columns: columns
    :type columns: List[TableColumnProps]
    :param rows: rows
    :type rows: List[Rows]
    """

    def __init__(
        self,
        id_: str,
        created_at: str,
        name: str,
        columns: List[TableColumnProps],
        rows: List[Rows],
    ):
        self.id_ = id_
        self.created_at = created_at
        self.name = name
        self.columns = self._define_list(columns, TableColumnProps)
        self.rows = self._define_list(rows, Rows)
