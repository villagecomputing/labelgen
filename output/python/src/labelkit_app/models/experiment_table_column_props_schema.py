# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class ExperimentTableColumnPropsSchemaType(Enum):
    """An enumeration representing different categories.

    :cvar IDENTIFIER: "IDENTIFIER"
    :vartype IDENTIFIER: str
    :cvar OUTPUT: "OUTPUT"
    :vartype OUTPUT: str
    :cvar METADATA: "METADATA"
    :vartype METADATA: str
    """

    IDENTIFIER = "IDENTIFIER"
    OUTPUT = "OUTPUT"
    METADATA = "METADATA"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                ExperimentTableColumnPropsSchemaType._member_map_.values(),
            )
        )


@JsonMap({"id_": "id", "type_": "type"})
class ExperimentTableColumnPropsSchema(BaseModel):
    """ExperimentTableColumnPropsSchema

    :param name: name
    :type name: str
    :param id_: id_
    :type id_: float
    :param field: field
    :type field: str
    :param type_: type_
    :type type_: ExperimentTableColumnPropsSchemaType
    """

    def __init__(
        self,
        name: str,
        id_: float,
        field: str,
        type_: ExperimentTableColumnPropsSchemaType,
    ):
        self.name = name
        self.id_ = id_
        self.field = field
        self.type_ = self._enum_matching(
            type_, ExperimentTableColumnPropsSchemaType.list(), "type_"
        )
