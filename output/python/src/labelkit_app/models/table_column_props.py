# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class TableColumnPropsType(Enum):
    """An enumeration representing different categories.

    :cvar IDENTIFIER: "IDENTIFIER"
    :vartype IDENTIFIER: str
    :cvar GROUND_TRUTH: "GROUND_TRUTH"
    :vartype GROUND_TRUTH: str
    :cvar GROUND_TRUTH_STATUS: "GROUND_TRUTH_STATUS"
    :vartype GROUND_TRUTH_STATUS: str
    :cvar PREDICTIVE_LABEL: "PREDICTIVE_LABEL"
    :vartype PREDICTIVE_LABEL: str
    :cvar INPUT: "INPUT"
    :vartype INPUT: str
    """

    IDENTIFIER = "IDENTIFIER"
    GROUND_TRUTH = "GROUND_TRUTH"
    GROUND_TRUTH_STATUS = "GROUND_TRUTH_STATUS"
    PREDICTIVE_LABEL = "PREDICTIVE_LABEL"
    INPUT = "INPUT"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, TableColumnPropsType._member_map_.values()))


@JsonMap({"id_": "id", "type_": "type"})
class TableColumnProps(BaseModel):
    """TableColumnProps

    :param name: name
    :type name: str
    :param id_: id_
    :type id_: float
    :param field: field
    :type field: str
    :param type_: type_
    :type type_: TableColumnPropsType
    """

    def __init__(self, name: str, id_: float, field: str, type_: TableColumnPropsType):
        self.name = name
        self.id_ = id_
        self.field = field
        self.type_ = self._enum_matching(type_, TableColumnPropsType.list(), "type_")
